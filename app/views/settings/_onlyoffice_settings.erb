<%#
# (c) Copyright Ascensio System SIA 2022
# http://www.onlyoffice.com
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
%>

<p>
  <%= content_tag(:label, l(:onlyoffice_settings_doc_url)) %>
  <%= text_field_tag 'settings[oo_address]', settings['oo_address'], :placeholder => "http://docserver/" %>
</p>

<fieldset>
  <legend>
    <span><%= l(:onlyoffice_additional_settings) %></span>
  </legend>
  <p>
    <%= content_tag(:label, l(:onlyoffice_additional_settings_editor)) %>
    <%= text_field_tag 'settings[inner_editor]', settings['inner_editor'], :placeholder => "http://docserver/" %>
  </p>
  <p>
    <%= content_tag(:label, l(:onlyoffice_additional_settings_server)) %>
    <%= text_field_tag 'settings[inner_server]', settings['inner_server'], :placeholder => "http://redmine/" %>
  </p>
  <label class="block">
    <%= check_box_tag 'settings[editor_demo]', 'on', settings['editor_demo'].eql?('on') %>
    <%= l(:onlyoffice_settings_editor_demo) %>
  </label>
</fieldset>
<fieldset>
  <legend>
    <span><%= l(:onlyoffice_settings_security) %></span>
  </legend>
  <p>
    <%= content_tag(:label, l(:onlyoffice_settings_jwtsecret)) %>
    <%= text_field_tag 'settings[jwtsecret]', settings['jwtsecret'] %>
  </p>
  <p>
    <%= content_tag(:label, l(:onlyoffice_settings_jwtheader)) %>
    <%= text_field_tag 'settings[jwtheader]', settings['jwtheader'] %>
  </p>
  <label class="block">
    <%= check_box_tag 'settings[check_cert]', 'on', settings['check_cert'].eql?('on') %>
    <%= l(:onlyoffice_settings_check_cert) %>
  </label>
</fieldset>
<fieldset>
  <legend>
    <span><%= l(:onlyoffice_settings_editor_view) %></span>
  </legend>
  <label class="block">
    <%= check_box_tag 'settings[editor_chat]', 'on', settings['editor_chat'].eql?('on') %>
    <%= l(:onlyoffice_settings_editor_view_chat) %>
  </label>
  <label class="block">
    <%= check_box_tag 'settings[editor_compact_header]', 'on', settings['editor_compact_header'].eql?('on') %>
    <%= l(:onlyoffice_settings_editor_view_header) %>
  </label>
  <label class="block">
    <%= check_box_tag 'settings[editor_feedback]', 'on', settings['editor_feedback'].eql?('on') %>
    <%= l(:onlyoffice_settings_editor_view_feedback) %>
  </label>
  <label class="block">
    <%= check_box_tag 'settings[editor_help]', 'on', settings['editor_help'].eql?('on') %>
    <%= l(:onlyoffice_settings_editor_view_help) %>
  </label>
  <label class="block">
    <%= check_box_tag 'settings[editor_toolbar_no_tabs]', 'on', settings['editor_toolbar_no_tabs'].eql?('on') %>
    <%= l(:onlyoffice_settings_editor_view_toolbar) %>
  </label>
</fieldset>

<div id="onlyoffice-notification" class="flash" style="display: none"></div>

<script type="text/javascript" language="javascript">
(function() {

  var notice = document.getElementById("onlyoffice-notification");
    var contentDiv = document.getElementById("content");
  var form = document.getElementById("settings").getElementsByTagName("form")[0];

  contentDiv.prepend(notice);

  var clearNoticeType = function() {
    notice.classList.remove("error");
    notice.classList.remove("warning");
    notice.classList.remove("notice");
  }

  var enableButton = function() {
    form.querySelector("input[type=submit]").disabled = false;
  }

  var showNotice = function (message) {
    notice.innerText = message;
        notice.style.display = "block";
  }

  var hideNotice = function () {
    notice.style.display = "none";
  }

  var showError = function (message) {
    clearNoticeType();
    notice.classList.add("error");
    showNotice(message);
    };

  var showWarning = function (message) {
    clearNoticeType();
    notice.classList.add("warning");
    showNotice(message);
  };

  var showSuccess = function (message) {
    clearNoticeType();
    notice.classList.add("notice");
    showNotice(message);
    };

    var fixUrl = function(url) {
      if (!url) return url;
    return url.trim().endsWith("/") ? url : url + "/";
    }

  var checkSettingsLocal = function () {
        var scriptCallback = function () {
            var resultScript = typeof DocsAPI !== "undefined";
            if (!resultScript) {
                showError("<%= l(:onlyoffice_editor_cannot_be_reached) %>");
        enableButton();
            } else {
        checkSettingsRemote();
            }
        };

    hideNotice();

    if (window.DocsAPI) {
        delete DocsAPI;
    }

        var scriptAddress = document.getElementById("scriptDocServiceAddress");
    if (scriptAddress) scriptAddress.remove();
    scriptAddress = document.createElement("script");
    scriptAddress.id = "scriptDocServiceAddress";
    scriptAddress.type = "text/javascript";
    document.head.appendChild(scriptAddress);
        scriptAddress.onload = scriptCallback;
        scriptAddress.onerror = scriptCallback;

      var editor_url = fixUrl(document.getElementById("settings_oo_address").value);
      if (document.getElementById("settings_editor_demo").checked) {
        editor_url = "https://onlinedocs.onlyoffice.com/";
      }
      scriptAddress.src = editor_url + "web-apps/apps/api/documents/api.js";
    };

  var checkSettingsRemote = function() {
    var data = new FormData(form);

    fetch("/pops/onlyoffice/settings", {
      body: data,
      method: "post"
    })
      .then(function(res) {
        return res.json();
      }).then(function(json) {
        if (json.success) {
          showSuccess(json.message);
        } else {
          showError(json.message);
        }
      }).catch(function(err) {
        showError(err);
      }).finally(function() {
        enableButton();
      });
  }

    var settingsCallback = function (e) {
        e.preventDefault();
    checkSettingsLocal();
    };
    
    var fieldsDisable = function (value) {
        $("#settings_oo_address").prop('disabled', value);
        $("#settings_inner_editor").prop('disabled', value);
        $("#settings_inner_server").prop('disabled', value);
        $("#settings_jwtsecret").prop('disabled', value);
        $("#settings_jwtheader").prop('disabled', value);
    };

    $(document).ready(function () {
    var demo = document.getElementById("settings_editor_demo");

    demo.onchange = function () {
          fieldsDisable(this.checked);
    };

    if (demo.checked) {
        fieldsDisable(true);
      }
    });

  form.onsubmit = settingsCallback;
})();
</script>
