<div class="contextual">
<%= watcher_link(@news, User.current) %>
<%= link_to(l(:button_edit),
      edit_news_path(@news),
      :class => 'icon icon-edit',
      :accesskey => accesskey(:edit),
      :onclick => '$("#edit-news").show(); return false;') if User.current.allowed_to?(:manage_news, @project) %>
<%= delete_link news_path(@news) if User.current.allowed_to?(:manage_news, @project) %>
</div>

<h2>
  <% if @news.is_private? %>
    <%= tag.i(class: 'fa fa-lock', title: I18n.t('news_private'), style: 'margin-right: 10px;') %>
  <% end %>
  <%= avatar(@news.author) %> <%=h @news.title %>
</h2>

<% if authorize_for('news', 'edit') %>
<div id="edit-news" style="display:none;">
<%= labelled_form_for :news, @news, :url => news_path(@news),
                                           :html => { :id => 'news-form', :multipart => true, :method => :put } do |f| %>
<%= render :partial => 'form', :locals => { :f => f } %>
<%= submit_tag l(:button_save) %>
<%= link_to l(:button_cancel), "#", :onclick => '$("#edit-news").hide(); return false;' %>
<% end %>
</div>
<% end %>

<p><% unless @news.summary.blank? %><em><%= @news.summary %></em><br /><% end %>
<span class="author"><%= authoring @news.created_on, @news.author %></span></p>
<div class="wiki">
<%= textilizable(@news, :description) %>
</div>
<%= link_to_attachments @news %>
<br />

<div id="comments" style="margin-bottom:16px;">
<h3 class="comments"><%= l(:label_comment_plural) %></h3>
<% if @news.commentable? && @comments.size >= 3 %>
  <p><%= toggle_link l(:label_comment_add), "add_comment_form", :focus => "comment_comments", :scroll => "comment_comments" %></p>
<% end %>
<% @comments.each do |comment| %>
    <% next if comment.new_record? %>
    <div class="contextual">
    <%= link_to_if_authorized l(:button_delete), {:controller => 'comments', :action => 'destroy', :id => @news, :comment_id => comment},
                              :data => {:confirm => l(:text_are_you_sure)}, :method => :delete,
                              :title => l(:button_delete),
                              :class => 'icon-only icon-del' %>
    </div>
    <h4><%= avatar(comment.author) %><%= authoring comment.created_on, comment.author %></h4>
    <div class="wiki">
    <%= textilizable(comment.comments) %>
    </div>
<% end if @comments.any? %>
</div>

<% if @news.commentable? %>
<p><%= toggle_link l(:label_comment_add), "add_comment_form", :focus => "comment_comments" %></p>
<%= form_tag({:controller => 'comments', :action => 'create', :id => @news}, :id => "add_comment_form", :style => "display:none;") do %>
<div class="box">
    <%= text_area 'comment', 'comments', :cols => 80, :rows => 15, :class => 'wiki-edit',
                  :data => {
                    :auto_complete => true
                  }
    %>
    <%= wikitoolbar_for 'comment_comments', preview_news_path(:project_id => @project, :id => @news) %>
</div>
<p><%= submit_tag l(:button_add) %></p>
<% end %>
<% end %>

<% html_title @news.title -%>

<% content_for :header_tags do %>
  <%= stylesheet_link_tag 'scm' %>
<% end %>

<% if OnlyofficeController.checking_activity_onlyoffice %>
  <%= javascript_include_tag "onlyofficeMenu", plugin: "onlyoffice_redmine" %>

  <%
    view_permission = false
    edit_permission = false
    user_roles = User.current.roles_for_project(@project)
    user_roles.each do |role|
      if role.permissions.include? :view_news
        view_permission = true
      end
      if role.permissions.include? :manage_news
        edit_permission = true
      end
    end
    project_is_not_readonly = @project.status != 5
    view_permission = view_permission || User.current.admin
    edit_permission = (edit_permission || User.current.admin) && project_is_not_readonly
    is_editable_array = []
    attachments_disk_filenames = []
    is_convert = []
    @news.attachments.each do |attachment|
      is_editable_array = is_editable_array + [DocumentHelper.is_editable(attachment)]
      attachments_disk_filenames = attachments_disk_filenames + [attachment.disk_filename]
      ext = DocumentHelper.file_ext(attachment.disk_filename, true)
      is_convert = is_convert + [FormatUtility.format_supported(ext).length != 0]
    end
  %>

  <script type="text/javascript" language="javascript">
    if (<%= view_permission || edit_permission%>) {
      ONLYOFFICE.Buttons.addOnlyOfficeButton(<%= raw FileUtility.get_all_available_formats %>, <%= raw attachments_disk_filenames %>, <%= raw is_convert %>, <%= @news.id %>, "News");
      var onlyofficeButtons = document.getElementsByClassName("onlyoffice-editor-button");
      for (var i = 0; i < onlyofficeButtons.length; i++) {
        if (<%= view_permission %>) {
          onlyofficeButtons[i].title = "<%= l(:open_in_onlyoffice) %>";
        }
        if (<%= is_editable_array %>[parseInt(onlyofficeButtons[i].id.replace("onlyoffice-button-", ""))] && <%= edit_permission %>) {
          onlyofficeButtons[i].title = "<%= l(:edit_in_onlyoffice) %>";
        }
      }

      var onlyofficeButtonsConvert = document.getElementsByClassName("onlyoffice-editor-button-convert");
      for (var i = 0; i < onlyofficeButtonsConvert.length; i++) {
        onlyofficeButtonsConvert[i].title = "<%= l(:onlyoffice_convert_dropdown) %>";
      }
    }
  </script>
<% end %>